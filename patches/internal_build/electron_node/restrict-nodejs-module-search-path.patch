From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Andrey Belenko <anbelen@microsoft.com>
Date: Tue, 9 Jun 2020 23:46:51 +0200
Subject: Restrict Node.js module search path to application resources
 directory

Microsoft patch

diff --git a/lib/internal/modules/cjs/loader.js b/lib/internal/modules/cjs/loader.js
index 800c22dea9c07a4039e6e7eabeae73a9b8013e09..84cdefb08bec2a893cb90964de591bda85f63587 100644
--- a/lib/internal/modules/cjs/loader.js
+++ b/lib/internal/modules/cjs/loader.js
@@ -776,6 +776,53 @@ if (isWindows) {
   };
 }
 
+const _originalNodeModulePaths = Module._nodeModulePaths;
+
+Module._nodeModulePaths = function (from) {
+  from = path.resolve(from);
+  var paths = _originalNodeModulePaths(from);
+  const resourcesPath = process.resourcesPath;
+
+  if (resourcesPath) {
+    // Returns true if p2 is below p1 in directory tree
+    const isSubdir = (p1, p2) => {
+      const rp = path.relative(p1, p2);
+      return !(rp.startsWith("..") || path.isAbsolute(rp));
+    };
+
+    if (isSubdir(resourcesPath, from)) {
+      return paths.filter(p => isSubdir(resourcesPath, p));
+    }
+  }
+
+  if (!isWindows) {
+    return paths;
+  }
+
+  //
+  // On Windows, remove drive(s) and users' home directory from search paths,
+  // UNLESS 'from' is explicitly set to one of those.
+  //
+  const isDrive = (p) => p.length >= 3 && p.endsWith(":\\");
+
+  if (!isDrive(from)) {
+    paths = paths.filter(p => !isDrive(path.dirname(p)));
+  }
+
+  if (process.env.HOMEDRIVE && process.env.HOMEPATH) {
+    const userDir = path.dirname(path.join(process.env.HOMEDRIVE, process.env.HOMEPATH));
+
+    const isUserDir = (p) => path.relative(p, userDir).length === 0;
+
+    // Check if 'from' is the same as 'userDir'
+    if (!isUserDir(from)) {
+      paths = paths.filter(p => !isUserDir(path.dirname(p)));
+    }
+  }
+
+  return paths;
+};
+
 Module._resolveLookupPaths = function(request, parent) {
   if (NativeModule.canBeRequiredByUsers(request)) {
     debug('looking for %j in []', request);
